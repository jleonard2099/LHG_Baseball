'----------------------------------------
'          ChooseTeam Subroutine
'----------------------------------------
'Provides dialog for user to select teams
' from a previously populated team file.
'The focus of this routine is to accept
' a disk ID from the user. It then relies
' on separate subroutines to assist with
' actually choosing the team, and also
' reading in data for the chosen team
Sub ChooseTeam (yearNumber$, numberTeams, chosenIdx, teamName$)

    Shared teamRatings()

    Shared previousYear$

    Do

        Color 15, 0
        Cls

        Call MenuBox(6, 8, 61, 7, 15, 4)

        Locate 7, 32

        Locate , 12: Print "ENTER DISK ID: "
        Print
        Locate , 12: Print "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
        Locate , 12: Print "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
        Print
        Locate , 12: Print "HIT <ENTER> TO USE PREVIOUS ID"

        I$ = GetKeyPress$

        If I$ <> Chr$(27) Then

            If I$ <> Chr$(13) Then

                Locate 7, 27: Print I$;

                NY$ = ""

                Do Until NY$ = Chr$(13)

                    NY$ = GetKeyPress$

                    If NY$ = Chr$(8) And Len(I$) >= 1 Then
                        col% = Pos(0)
                        I$ = Left$(I$, (Len(I$) - 1))
                        Locate , col% - 1
                        Print " ";
                        Locate , col% - 1
                    Else
                        I$ = I$ + NY$
                        Print NY$;
                    End If

                Loop

                I$ = Left$(I$, (Len(I$) - 1))

                If Not (I$ = "" And yearNumber$ <> "") Then

                    yearNumber$ = RTrim$(I$)
                    Erase teamNames$
                    numberTeams = 0

                    Cls

                    If Not _FileExists(diskPaths$(0) + TEAM_FILE_NAME$ + "." + yearNumber$) Then

                        MsgText$ = "NO TEAMS WERE FOUND MATCHING THAT ID... PRESS ANY KEY TO SELECT ANOTHER ID"
                        BoxWidth = 20
                        BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
                        Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
                        Call CSMsgBox(MsgText$, BoxWidth, Pass)
                        I$ = GetKeyPress$
                        Call CSMsgBox("", 0, Pass)
                        Exit Sub

                    Else

                        Open diskPaths$(0) + TEAM_FILE_NAME$ + "." + yearNumber$ For Random As #1 Len = TEAM_SIZE_BYTES

                        fileLength& = LOF(1)

                        Field #1, 15 As Q$(0)

                        numberTeams = fileLength& / TEAM_SIZE_BYTES

                        For teamIdx = 1 To numberTeams
                            Get #1, teamIdx
                            'numberTeams = numberTeams + 1
                            teamNames$(teamIdx) = Q$(0)
                            teamIndex%(teamIdx) = teamIdx
                        Next teamIdx

                        Close #1

                    End If 'Done checking if file exists

                End If 'Done checking for blank year number

                previousYear$ = yearNumber$

            Else

                yearNumber$ = previousYear$

            End If 'Done checking for ENTER key

            'Locate 2, 33
            'Color 31: Print "LOADING..."

            Do

                Call SelectTeam(numberTeams, yearNumber$, chosenIdx, teamName$, ExitCode%)
                'teamGender$(gameIdx) = GetTeamGender$(yearNumber$)

                If ExitCode% <> 27 And numberTeams <> 0 And chosenIdx > 0 Then

                    Do

                        YCoord = Int((80 - Len(teamName$)) / 2)
                        Locate 2, YCoord
                        Color teamRatings(11), teamRatings(12): Print teamName$

                        Color 15, 4
                        Locate 3, 32: Print "ANY CHANGE? (Y/N)";

                        J$ = GetKeyPress$

                    Loop Until J$ = Chr$(27) Or UCase$(J$) = "Y" Or UCase$(J$) = "N"

                End If

                'chosenIdx = -1 means there was invalid data
            Loop Until ExitCode% = 27 Or J$ = Chr$(27) Or UCase$(J$) = "N" Or chosenIdx = -1

        End If 'Done checking for ESC

    Loop Until UCase$(J$) = "N" Or I$ = Chr$(27) 'Or J$ = Chr$(27)

    If I$ = Chr$(27) Or J$ = Chr$(27) Then chosenIdx = 0

End Sub


'----------------------------------------
'          SelectTeam Subroutine
'----------------------------------------
'Presents selection menu of all teams 
' found in the target "disk" file. 
'The focus of this routine is confirming 
' a team choice. It then relies on 
' another subroutine to read in data 
' from the selected team.
Sub SelectTeam (numberTeams, yearNumber$, selectedIdx, teamName$, ExitCode%)

    ExitCode% = -1
    validData = 0

    If numberTeams > 0 And CheckString%(teamNames$(numberTeams)) = 0 Then

        SELECTION% = 1
        Count% = numberTeams
        Start% = 1
        FileFGColor = 15: FileBGColor = 4
        HiLiteFGColor = 0: HiLiteBGColor = 7
        Rows = 20
        Columns% = 4
        Spacing% = 6
        Row% = 4
        Column% = 1

        Color , 4
        Cls
        Color 14
        Locate , 33: Print "TEAM SELECTION"
        Locate 25, 1
        Color 14: Print "ESC";
        Color 15: Print "-SELECT NEW ID  PGDN  PGUP  ";
        Color 14: Print "ENTER";
        Color 15: Print "-SELECTS TEAM";

        _MouseShow "DEFAULT"
        MAMenu teamNames$(), SELECTION%, Start%, Count%, ExitCode%, FileFGColor, FileBGColor, HiLiteFGColor, HiLiteBGColor, Rows%, Columns%, Spacing%, Row%, Column%
        _MouseHide

        If ExitCode% <> 27 Then

            selectedIdx = teamIndex%(SELECTION%)

            'Locate 2, 33
            'Color 31: Print "LOADING..."

            Call ReadTeam(yearNumber$, teamName$, selectedIdx, validData)
            Call ReadExtraData(yearNumber$, selectedIdx)

        End If

    End If

    If validData = 0 And ExitCode% <> 27 Then

        selectedIdx = -1
        Locate 9,
        Call CSMsgBox("THERE WAS AN ISSUE READING TEAM DATA.... PRESS ANY KEY AND TRY ANOTHER DISK ID", 20, PASS)
        K$ = GetKeyPress$
        Call CSMsgBox("", 0, PASS)

    End If

End Sub


'----------------------------------------
'           ReadTeam Subroutine
'----------------------------------------
'Reads in all data for the selected team, 
' given it's index in the team file. 
'This routine is highly customized TO
' the specific game for which it has
' been included for.
Sub ReadTeam (teamYear$, targetTeam$, teamIdx, dataOK)

    Shared batterRatings(), pitcherRatings()
    Shared teamRatings()

    Shared CK, parkHR

    Shared batterNames$(), pitcherNames$()

    Shared Manager$, teamAbbrev$, Stadium$

    Open diskPaths$(0) + TEAM_FILE_NAME$ + "." + teamYear$ For Random As #1 Len = TEAM_SIZE_BYTES

    Field #1, 15 As Q$(0), 2 As Q$(1), 2 As Q$(2), 2 As Q$(3), 2 As Q$(4), 2 As Q$(5), 2 As Q$(6), 2 As Q$(7), 2 As Q$(8), 2 As Q$(9), 2 As Q$(10), 2 As Q$(11), 2 As Q$(12), 2 As Q$(13), 4 As Q$(14)

    For I = 0 To 22
        Field #1, 45 + I * 99 As X$, 15 As Q$(I * 43 + 15), 2 As Q$(I * 43 + 16), 2 As Q$(I * 43 + 17), 2 As Q$(I * 43 + 18), 2 As Q$(I * 43 + 19), 2 As Q$(I * 43 + 20), 2 As Q$(I * 43 + 21), 2 As Q$(I * 43 + 22), 2 As Q$(I * 43 + 23), 2 As Q$(I * 43 + 24), 2 As Q$(I * 43 + 25), 2 As Q$(I * 43 + 26)
        Field #1, 82 + I * 99 As X$, 2 As Q$(I * 43 + 27), 2 As Q$(I * 43 + 28), 2 As Q$(I * 43 + 29), 2 As Q$(I * 43 + 30), 2 As Q$(I * 43 + 31), 2 As Q$(I * 43 + 32), 2 As Q$(I * 43 + 33), 2 As Q$(I * 43 + 34), 2 As Q$(I * 43 + 35), 2 As Q$(I * 43 + 36), 2 As Q$(I * 43 + 37), 2 As Q$(I * 43 + 38)
        Field #1, 106 + I * 99 As X$, 2 As Q$(I * 43 + 39), 2 As Q$(I * 43 + 40), 2 As Q$(I * 43 + 41), 2 As Q$(I * 43 + 42), 2 As Q$(I * 43 + 43), 2 As Q$(I * 43 + 44), 2 As Q$(I * 43 + 45), 2 As Q$(I * 43 + 46), 2 As Q$(I * 43 + 47), 2 As Q$(I * 43 + 48), 2 As Q$(I * 43 + 49), 2 As Q$(I * 43 + 50)
        Field #1, 130 + I * 99 As X$, 2 As Q$(I * 43 + 51), 2 As Q$(I * 43 + 52), 2 As Q$(I * 43 + 53), 2 As Q$(I * 43 + 54), 2 As Q$(I * 43 + 55), 2 As Q$(I * 43 + 56), 2 As Q$(I * 43 + 57)
    Next

    For I = 0 To 21
        Field #1, 2322 + I * 89 As X$, 15 As Q$(I * 38 + 1004), 2 As Q$(I * 38 + 1005), 2 As Q$(I * 38 + 1006), 2 As Q$(I * 38 + 1007), 2 As Q$(I * 38 + 1008), 2 As Q$(I * 38 + 1009), 2 As Q$(I * 38 + 1010), 2 As Q$(I * 38 + 1011), 2 As Q$(I * 38 + 1012), 2 As Q$(I * 38 + 1013), 2 As Q$(I * 38 + 1014), 2 As Q$(I * 38 + 1015)
        Field #1, 2359 + I * 89 As X$, 2 As Q$(I * 38 + 1016), 2 As Q$(I * 38 + 1017), 2 As Q$(I * 38 + 1018), 2 As Q$(I * 38 + 1019), 2 As Q$(I * 38 + 1020), 2 As Q$(I * 38 + 1021), 2 As Q$(I * 38 + 1022), 2 As Q$(I * 38 + 1023), 2 As Q$(I * 38 + 1024), 2 As Q$(I * 38 + 1025), 2 As Q$(I * 38 + 1026), 2 As Q$(I * 38 + 1027)
        Field #1, 2383 + I * 89 As X$, 2 As Q$(I * 38 + 1028), 2 As Q$(I * 38 + 1029), 2 As Q$(I * 38 + 1030), 2 As Q$(I * 38 + 1031), 2 As Q$(I * 38 + 1032), 2 As Q$(I * 38 + 1033), 2 As Q$(I * 38 + 1034), 2 As Q$(I * 38 + 1035), 2 As Q$(I * 38 + 1036), 2 As Q$(I * 38 + 1037), 2 As Q$(I * 38 + 1038), 2 As Q$(I * 38 + 1039)
        Field #1, 2407 + I * 89 As X$, 2 As Q$(I * 38 + 1040), 2 As Q$(I * 38 + 1041)
    Next

    Field #1, 4280 As X$, 40 As Q$(1840), 15 As Q$(1841), 5 As Q$(1842), 2 As Q$(1843)

    Get #1, teamIdx

    targetTeam$ = RTrim$(Q$(0))

    For I = 1 To 13:
        teamRatings(I) = CVI(Q$(I))
    Next

    parkHR = CVS(Q$(14))

    For I = 0 To 22:

        batterNames$(I) = RTrim$(Q$(I * 43 + 15))

        For I1 = 0 To 41
            batterRatings(I, I1) = CVI(Q$(I * 43 + I1 + 16))
        Next

    Next

    For I = 0 To 21

        pitcherNames$(I) = RTrim$(Q$(I * 38 + 1004))

        For I1 = 0 To 36
            pitcherRatings(I, I1) = CVI(Q$(I * 38 + I1 + 1005))
        Next

    Next

    Stadium$ = RTrim$(Q$(1840))
    Manager$ = RTrim$(Q$(1841))
    teamAbbrev$ = RTrim$(Q$(1842))

    CK = CVI(Q$(1843))

    'Close team file
    Close #1

    If CK = 999 Then
        
        dataOK = 1
        
    Else
    
        dataOK = 0
        
    End If

End Sub


'----------------------------------------
'        ReadExtraData Subroutine
'----------------------------------------
'Reads in extra data for the selected team, 
' given it's index in the team file. 
'This extra file includes Lefty-Right 
' calculations.
'This routine is highly customized TO
' the specific game for which it has
' been included for.
Sub ReadExtraData (teamYear$, teamIdx)

    Shared teamSA(), teamTS()
    Shared batterRatings(), pitcherRatings()

    If Not _FileExists(diskPaths$(0) + DATA_FILE_NAME$ + "." + teamYear$) Then

        'MsgText$ = "WARNING!!! NO DATA FILE WAS FOUND FOR THIS TEAM. PRESS ANY KEY TO CONTINUE"
        'BoxWidth = 24
        'BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
        'Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
        'Call CSMsgBox(MsgText$, BoxWidth, Pass)
        'I$ = GetKeyPress$
        'Call CSMsgBox("", 0, Pass)

    End If

    Open diskPaths$(0) + DATA_FILE_NAME$ + "." + teamYear$ For Random As #1 Len = DATA_SIZE_BYTES

    For X = 0 To 11
        Field #1, X * 2 As X$, 2 As Q$(X + 1)
    Next

    For X = 0 To 22
        For X1 = 1 To 14
            Field #1, 24 + (X1 - 1) * 2 + X * 14 * 2 As X$, 2 As Q$(12 + X1 + X * 14)
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 14
            Field #1, 668 + (X1 - 1) * 2 + X * 14 * 2 As X$, 2 As Q$(334 + X1 + X * 14)
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 14
            Field #1, 1284 + (X1 - 1) * 2 + X * 14 * 2 As X$, 2 As Q$(642 + X1 + X * 14)
        Next
    Next

    For X = 1 To 24
        Field #1, 1900 + (X - 1) * 2 As X$, 2 As Q$(950 + X)
    Next

    For X = 0 To 22
        For X1 = 1 To 24
            Field #1, 1948 + (X1 - 1) * 2 + X * 24 * 2 As X$, 2 As Q$(975 + X1 + X * 24)
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 24
            Field #1, 3052 + (X1 - 1) * 2 + X * 24 * 2 As X$, 2 As Q$(1528 + X1 + X * 24)
        Next
    Next

    Get #1, teamIdx

    For X = 0 To 11
        teamTS(X) = CVI(Q$(X + 1))
    Next

    For X = 0 To 22
        For X1 = 1 To 14
            batterRatings(X, X1 + 41) = CVI(Q$(12 + X1 + X * 14))
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 14
            pitcherRatings(X, X1 + 36) = CVI(Q$(334 + X1 + X * 14))
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 14
            pitcherRatings(X, X1 + 50) = CVI(Q$(642 + X1 + X * 14))
        Next
    Next

    For X = 1 To 24
        teamSA(X) = CVI(Q$(X + 950))
    Next

    For X = 0 To 22
        For X1 = 1 To 24
            batterRatings(X, X1 + 55) = CVI(Q$(975 + X1 + X * 24))
        Next
    Next

    For X = 0 To 21
        For X1 = 1 To 24
            pitcherRatings(X, X1 + 64) = CVI(Q$(1528 + X1 + X * 24))
        Next
    Next

    Close #1

    If teamTS(0) <> 999 Then

        For X = 0 To 22
            For X1 = 42 To 79
                batterRatings(X, X1) = 0
            Next
        Next

        For X = 0 To 21
            For X1 = 37 To 88
                pitcherRatings(X, X1) = 0
            Next
        Next

        Erase teamSA, teamTS

    End If

End Sub

'----------------------------------------
'         nameStatFile$ Function
'----------------------------------------
'Helps create uniquely named file to 
' store a team's stats.
'
'There are 2 main changes done in order
' to accomodate this:
' 1) Replaces invalid characters with _
' 2) If "ST" is the name, shortens the
'    prefix. This helps with college
'    teams (ARKANSAS vs ARKANSAS ST)
Function nameStatFile$ (teamName$)

    teamPrefix$ = teamName$

    For XX = 4 To 11

        If Mid$(teamPrefix$, XX, 1) = " " Or Mid$(teamPrefix$, XX, 1) = "." Or Mid$(teamPrefix$, XX, 1) = "/" Or Mid$(teamPrefix$, XX, 1) = "_" Then
            Mid$(teamPrefix$, XX, 1) = "_"
        End If

    Next XX

    For XX = 12 To 14

        'If Mid$(teamPrefix$, XX, 3) = " ST" Then
        If Mid$(teamPrefix$, XX, 2) = "ST" Then
            Mid$(teamPrefix$, 9, 1) = "_"
            Mid$(teamPrefix$, 10, 2) = "ST"
        End If

    Next XX

    'Length of 'converted' name for file
    '-- update this if we want to support long files
    QQ = 8

    For XX = 11 To 4 Step -1
        If Mid$(teamPrefix$, XX, 1) = "_" Then
            QQ = XX - 4
        Else
            Exit For
        End If
    Next XX

    nameStatFile$ = Mid$(teamPrefix$, 4, QQ) + "." + Left$(teamPrefix$, 2)

End Function


'----------------------------------------
'          CheckString Function
'----------------------------------------
'This function checks the given string
'to determine if any characters are not
'alpha-numeric or printable.
'Return Values
'1 = non-printable characters were found
'0 = all characters in string are alpha-numeric.
Function CheckString% (targetString$)

    badString = 0
    stringPosition% = 1

    Do

        test = Asc(Mid$(targetString$, stringPosition%, 1))

        'If it is a non-printable character (corrupt data)
        If test > 122 Or test < 32 Then
            stringPosition% = 1
            badString = 1
        Else
            stringPosition% = stringPosition% + 1
        End If

    Loop Until stringPosition% = Len(targetString$) Or badString = 1

    CheckString% = badString

End Function


'----------------------------------------
'        ChooseFile$ Function
'----------------------------------------
'Shows user a file selection menu, based
' on the file spec parameter passed.
'
'fileSpec$ - file specification to load 
'            should include base path.
'
' EXAMPLE - C:\Temp\*.tmp
'
'fileDesc$ - brief description of the 
'            type of file
'
' RETURNS - base name of chosen file 
'            (that is, without extension)
Function ChooseFile$ (fileSpec$, fileDesc$, ExitCode%)

    descLength = Len(fileDesc$)

    Do
        'Display list of files...

        Count% = FileCount%(fileSpec$)

        If Count% = 0 Then

            Locate 10, 8
            zeroCountMsg$ = "NO " + fileDesc$ + " FILES WERE FOUND... PRESS ANY KEY TO RETURN TO MAIN MENU"

            Call CSMsgBox(zeroCountMsg$, 20, Pass)
            I$ = GetKeyPress$
            Call CSMsgBox("", 0, Pass)

        Else

            ReDim foundFiles$(0 To Count%)

            'For X = 1 To Count%
                '8 char's filename + 4 char's (. + ext)
                'foundFiles$(X) = Space$(12)
            'Next

            foundFiles$(0) = fileSpec$
            Call ReadFile(foundFiles$())

            Do

                XCoord = Int((80 - (descLength + 12)) / 2)

                Color , 1
                Cls
                Locate , XCoord
                Color 14
                Print "SELECT "; fileDesc$; " FILE"
                Color 15
                SELECTION% = 1
                START% = 1
                FileFGColor = 15: FileBGColor = 1
                HiLiteFGColor% = 0: HiLiteBGColor% = 7
                Rows% = 20
                Columns% = 3
                Spacing% = 5
                Row% = 4
                Column% = 1
                Locate 25, 1
                Color 14
                Print "ENTER";
                Color 15
                Print "-SELECTS "; fileDesc$;
                Color 14
                Locate , 55
                Print "HIT ESCAPE KEY TO EXIT";
                Color 15

                _MouseShow "DEFAULT"
                MAMenu foundFiles$(), SELECTION%, START%, Count%, ExitCode%, FileFGColor, FileBGColor, HiLiteFGColor%, HiLiteBGColor%, Rows%, Columns%, Spacing%, Row%, Column%
                _MouseHide

                If ExitCode% <> 27 Then

                    Color 15, 1
                    targetFile$ = RTrim$(foundFiles$(SELECTION%))
                    XCoord = Int((80 - Len(targetFile$))/2)
                    Locate 2, XCoord
                    Print targetFile$

                    Do
                        Locate , 31
                        Print "ANY CHANGE? (Y/N)";
                        I$ = GetKeyPress$
                    Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

                    Color 15, 0

                End If

            Loop Until UCase$(I$) = "N" Or ExitCode% = 27

        End If 'Done checking file count

        '...Until we press ESC
    Loop Until ExitCode% = 27 Or Count% = 0 Or UCase$(I$) = "N"

    If ExitCode% <> 27 Then
        ChooseFile$ = Left$(RTrim$(targetFile$), Len(targetFile$) - 4)
    End If

End Function


'----------------------------------------
'     ReportFilePrompt_Pro Subroutine
'----------------------------------------
'This subroutine prompts the user for
'the name of the report file to be saved
Sub UserFilePrompt (reportFile$)

    Do

        Color 15, 0
        Cls

        Call MenuBox(6, 8, 61, 7, 15, 1)

        Locate 7, 32

        Locate , 12: Print "ENTER NAME FOR FILE: ": Print
        Locate , 12: Print "THE NAME SHOULD HAVE NO PERIODS OR SPECIAL CHARACTERS"
        Locate , 12: Print "DO NOT ADD A FILE EXTENSION; THE PROGRAM"
        Locate , 12: Print "WILL AUTOMATICALLY ADD .RPT"
        Locate 7, 37: Input reportFile$

        If reportFile$ <> "" Then

            Do
                Locate 13, 12: Print "ANY CHANGE? (Y/N) "
                I$ = GetKeyPress$
            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

        End If

    Loop Until UCase$(I$) = "N" And reportFile$ <> ""

End Sub


'----------------------------------------
'     ScheduleFilePrompt Subroutine
'----------------------------------------
'This subroutine prompts the user for
'the name of the schedule file to be saved
Sub ScheduleFilePrompt (scheduleFile$)

    Color 15, 0
    Cls

    Call MenuBox(6, 8, 61, 8, 15, 1)

    Do

        Locate 7, 32

        Locate , 12: Print "ENTER NAME FOR SCHEDULE: "
        Print
        Locate , 12: Print "THE NAME SHOULD HAVE NO PERIODS OR SPECIAL CHARACTERS"
        Locate , 12: Print "DO NOT ADD A FILE EXTENSION; THE PROGRAM"
        Locate , 12: Print "WILL AUTOMATICALLY ADD .SCD"
        Locate , 12: Print "SAMPLE NAMES ARE INDIANA, BOS68, CHI-76, ETC      "
        Locate 7, 40: Input scheduleFile$

        If scheduleFile$ <> "" Then

            Do

                Locate 14, 12
                Print "ANY CHANGE? (Y/N) "
                I$ = GetKeyPress$

            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N" Or I$ = Chr$(27)

        End If

    Loop Until (UCase$(I$) = "N" And scheduleFile$ <> "") Or I$ = Chr$(27)


End Sub
